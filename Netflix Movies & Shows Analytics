#In this SQL code, I'm querying a database that's holding Nexflix data to answer questions about the data. (using PostgreSQL)

--1.How many movie titles are there in the database? (movies only, not tv shows)
SELECT COUNT(*) 
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type = 'Movie';
-- note the use of single quotes in WHERE type='Movie'
-- In PostgreSQL, you have to use single quotes to select strings,
-- because double quotes are part of the syntax for the FROM statement

--2.When was the most recent batch of tv shows and/or movies added to the database?
SELECT max(date(date_added))
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info";

--3.List all the movies and tv shows in alphabetical order.
SELECT title
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
ORDER BY title asc  ;

--4.Who was the Director for the movie Bright Star?
SELECT director
FROM "CharlotteChaze/BreakIntoTech"."netflix_people" NP
LEFT JOIN "CharlotteChaze/BreakIntoTech"."netflix_titles_info" NTI
ON NP.show_id = NTI.show_id
WHERE NTI.title = 'Bright Star';

--5.What is the oldest movie in the database and what year was it made?
SELECT title,release_year
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type = 'Movie'
ORDER BY release_year asc
LIMIT 1;

--NOTE: The above SQL gives you a correct answer,
--but there are actually 2 movies that came out that year! 
--You can see the second one by changing
--LIMIT 1 to LIMIT 2. 
--Or, you can use a "subquery" like this to see all the oldest movies
--without assuming that there was only 1 that year: 

SELECT title, release_year 
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type = 'Movie'
AND release_year <= 
(SELECT MIN(release_year) 
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type = 'Movie'); 
